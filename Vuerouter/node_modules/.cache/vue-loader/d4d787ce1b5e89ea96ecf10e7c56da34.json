{"remainingRequest":"D:\\work\\Vuerouter\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\Vuerouter\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\work\\Vuerouter\\src\\App.vue","mtime":1573414507196},{"path":"D:\\work\\Vuerouter\\node_modules\\css-loader\\index.js","mtime":1573207962824},{"path":"D:\\work\\Vuerouter\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1573208010307},{"path":"D:\\work\\Vuerouter\\node_modules\\postcss-loader\\src\\index.js","mtime":1573208013878},{"path":"D:\\work\\Vuerouter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573207983702},{"path":"D:\\work\\Vuerouter\\node_modules\\vue-loader\\lib\\index.js","mtime":1573208010266}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\r\n\r\n/*组件未被选中时 */\r\na.nochosen {\r\n\tbackground:burlywood;\r\n}\r\n\r\n/* 组件被选中时，添加class: router-link-active */\r\na.router-link-active { \r\n\tbackground:#42B983;\r\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n\t<header>\r\n\t<!-- router-link 定义点击后导航再哪个路径下 -->\r\n\t\t<router-link to=\"/home\" class=\"nochosen\">Home</router-link>\r\n\t\t<router-link to=\"/about\" class=\"nochosen\">About</router-link>\r\n\t\t<!-- 增加两个到user组件的导航，这里使用了不同的to属性 -->\r\n\t\t<router-link to=\"/user/123\">User123</router-link>\r\n\t\t<!-- <router-link :to=\"{ name: 'user', params: { userId: 123 }}\">User</router-link> 等于上面一条 当使用对象作为路由的时候，to前面要加一个冒号,表示绑定-->\r\n\t\t<router-link to=\"/user/456\">User456</router-link>\r\n\t\t<router-link :to=\"{ name:'user' , params: { id:'123'} }\">根据user的name属性和传入对象id:'123'到达</router-link>\r\n\t\t<!-- router-link 的 to 属性要注意，路由是先进入到home,然后才进入相应的子路由 例如phone -->\r\n\t\t<p>\r\n\t\t\t<router-link to=\"/home/phone\">手机</router-link>\r\n\t\t\t<router-link to=\"/home/tablet\">平板</router-link>\r\n\t\t\t<router-link to=\"/home/computer\">电脑</router-link>\r\n\t\t</p>\r\n\t\t<button @click=\"$router.push('/about')\">通过按钮方法$router.push去about组件</button>\r\n\t\t<button @click=\"$router.push({ path : '/home' })\">通过按钮方法$router.push,传入对象,去home组件</button>\r\n\t\t<button @click=\"$router.push({ name: 'user', params: { id: '123' }})\">传入对象,去user的子组件123,命名的路由</button>\r\n\t\t<button @click=\"$router.push({ path: 'user', query: { id: '456' }})\">传入对象,去user的子组件456,带查询参数，变成 /user?id=456</button>\r\n\t\t<br>\r\n\t\t<button @click=\"$router.replace({ path: '/about'})\">用$router.replace(),去about组件,但不会留下history，后退不了,其他与push一样</button>\r\n\t\t<br>\r\n\t\t<p>用router.go() 分别传入1,-1,3；前提是在浏览器中有history</p>\r\n\t\t<button @click=\"$router.go(1)\">前进1步</button>\r\n\t\t<button @click=\"$router.go(-1)\">后退1步</button>\r\n\t\t<button @click=\"$router.go(3)\">前进3步</button>\r\n\t</header>\r\n\t<!-- 对应的组件内容渲染到router-view中 -->\r\n\t<router-view></router-view>\r\n\t<hr/>\r\n\t\r\n\t<br>\r\n\t<router-link to=\"/multiview\">去multiview组件</router-link>\r\n\t<router-view class=\"view one\" name=\"a\"></router-view>\r\n\t<router-view class=\"view two\" name=\"b\"></router-view>\r\n\t<router-view class=\"view three\" name=\"c\"></router-view>\r\n\t\r\n\t<hr/>\r\n\t<router-link to=\"/settings\">去usersettings组件</router-link>\r\n\t<router-view class=\"usersettings\" name=\"usersettings\"></router-view>\r\n\t<hr/>\r\n\t<router-link to=\"/another\">去another但它会匹配到news</router-link>\r\n\t<router-view name=\"news\"></router-view>\r\n\t<hr/>\r\n\t<router-link to='/pass/1108/mike'>去id为1108，userName为mike的pass页面 </router-link>\r\n\t<router-link to='/pass/1108/mike'>这个使用$router.push()方法</router-link>\r\n\t<br>\r\n\t<router-link :to=\"{ path:'/hello' , query:{ id:123 , userName:'kyle' }}\">跳转到hello,用query传入两个参数 </router-link>\r\n\t<!-- 用params方式传递参数，只能用name引入路由，而不能用path -->\r\n\t<router-link :to=\"{name:'hello2' , params:{ id:789 , userName:'stan' }}\"> 跳到hello2</router-link>\r\n\t<router-view name=\"pass\"></router-view>\r\n\t<hr/>\r\n\t<p>上面如果用params或query传入参数，需要新建另一个文件来，或者说是用不同的代码来获取参数，不太方便</p>\r\n\t<router-link to=\"/buer/000/carment\">去buer</router-link>\r\n\t<router-link to=\"/buer1/111/keney\">去buer1</router-link>\r\n\t<router-link to=\"/buer1/222/butters\">去buer1</router-link>\r\n\t<router-link to=\"/buer3\">去buer3</router-link>\r\n\t<router-link :to=\"{path:'/buer4' , params:{ id:123,userName:'hand'}}\">去buer4</router-link>\r\n\t<router-view name=\"buer1\"></router-view>\r\n\t<router-view name=\"buer2\"></router-view>\r\n\t</div>\n</template>\n\n<script>\n\nexport default {\n\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\r\n\r\n/*组件未被选中时 */\r\na.nochosen {\r\n\tbackground:burlywood;\r\n}\r\n\r\n/* 组件被选中时，添加class: router-link-active */\r\na.router-link-active { \r\n\tbackground:#42B983;\r\n}\n</style>\n"]}]}